import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '../styles/Home.module.scss'
import {useState} from "react";
import clsx from "clsx";

const inter = Inter({ subsets: ['latin'] })

type Article = {
  title: string,
  url: string,
  description: string
}

type ERCEvent = {
  title: string,
  url: string
}

const articles: Article[] = [
  {
    title: "Known problems of ERC-20 standard.",
    description: "This article describes how bad ERC-20 is",
    url: "https://dexaran820.medium.com/known-problems-of-erc20-token-standard-e98887b9532c"
  }
];

const erc223: Article[] = [
  {
    title: "This is official source code",
    description: "for any questions mail me dexaran@ethereumclassic.org",
    url: "https://dexaran820.medium.com/known-problems-of-erc20-token-standard-e98887b9532c"
  },
  {
    title: "This is official source code",
    description: "for any questions mail me dexaran@ethereumclassic.org",
    url: "https://dexaran820.medium.com/known-problems-of-erc20-token-standard-e98887b9532c"
  },
  {
    title: "This is official source code",
    description: "for any questions mail me dexaran@ethereumclassic.org",
    url: "https://dexaran820.medium.com/known-problems-of-erc20-token-standard-e98887b9532c"
  }
]

const resources: Article[] = [
  {
    title: "A guideline for creating your own ERC-223 token",
    description: "Here you can find code examples!!!",
    url: "https://dexaran820.medium.com/known-problems-of-erc20-token-standard-e98887b9532c"
  }
];

const events: ERCEvent[] = [
  {
    title: "Lorem ipsum dolor sit amet.",
    url: "https://dexaran820.medium.com/known-problems-of-erc20-token-standard-e98887b9532c"
  },
  {
    title: "Lorem ipsum dolor sit amet.",
    url: "#"
  },
  {
    title: "Lorem ipsum dolor sit amet, consectetur.",
    url: "#"
  },
  {
    title: "Lorem ipsum dolor sit.",
    url: "#"
  },
  {
    title: "Lorem ipsum dolor sit amet, consectetur adipisicing elit.",
    url: "#"
  }
]

export default function Home() {
  const [activeTab, setActiveTab] = useState(0);

  return (
    <>

      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.tabs}>
          <div className={clsx(styles.tab, activeTab === 0 && styles.active)}>
            <button onClick={() => {
              setActiveTab(0);
            }} className={styles.tabButton}>Resources</button>
            <div className={styles.resources}>
              <div>
                <h1>Articles by Dexaran</h1>
                <div className={styles.eventsContainer}>
                  {articles.map((article) => {
                    return <div key={article.title} className={styles.article}>
                      <a href={article.url}>
                        {article.title}
                      </a>
                      <p>{article.description}</p>
                    </div>
                  })}
                </div>
              </div>
              <div>
                <h1>ERC-223</h1>
                <div className={styles.eventsContainer}>
                  {erc223.map((article) => {
                    return <div key={article.title} className={styles.article}>
                      <a href={article.url}>
                        {article.title}
                      </a>
                      <p>{article.description}</p>
                    </div>
                  })}
                </div>
              </div>
              <div>
                <h1>Development resources</h1>
                <div className={styles.eventsContainer}>
                  {resources.map((article) => {
                    return <div key={article.title} className={styles.article}>
                      <a href={article.url}>
                        {article.title}
                      </a>
                      <p>{article.description}</p>
                    </div>
                  })}
                </div>
              </div>
            </div>
          </div>
          <div className={clsx(styles.tab, activeTab === 1 && styles.active)}>
            <button onClick={() => {
              setActiveTab(1);
            }} className={styles.tabButton}>Events</button>
            <div className={styles.events}>
              <h1>Events</h1>
              <div className={styles.eventsContainer}>
                {events.map((event) => {
                  return <div key={event.url} className={styles.event}>
                    <a href={event.url}>
                      {event.title}
                    </a>
                  </div>
                })}
              </div>
            </div>
          </div>
        </div>
      </main>
    </>
  )
}
